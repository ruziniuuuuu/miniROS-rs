[project]
name = "mini-ros-python"
description = "Python bindings for miniROS - ROS2 compatible minimal middleware"
version = "0.1.2"
requires-python = ">=3.8"
authors = [
    {name = "Chenyu Cao", email = "ruziniuuuuu@gmail.com"},
]
license = {text = "MIT OR Apache-2.0"}
readme = "README.md"
keywords = ["robotics", "ros2", "python", "bindings"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# No runtime dependencies - keep it minimal
dependencies = []

# CLI entry points - using different name to avoid conflicts
[project.scripts]
mini_ros_py = "mini_ros.cli:main"

[project.optional-dependencies]
# Development dependencies for testing
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18",
    "pytest-timeout>=2.0",
    "pytest-cov>=3.0",
]
# Examples have no extra dependencies
examples = []

# CLI dependencies for shell completions (optional)
cli = [
    "argcomplete>=2.0",  # For bash/zsh completions
]

[project.urls]
Homepage = "https://github.com/ruziniuuuuu/miniROS-rs"
Repository = "https://github.com/ruziniuuuuu/miniROS-rs"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",  # Show short test summary info for all tests
    "-q",   # Quiet mode
    "--strict-markers",  # Treat unknown markers as errors
    "--disable-warnings",  # Disable warnings for cleaner output
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]
timeout = 30  # Global timeout for tests

# Coverage configuration
[tool.coverage.run]
source = ["mini_ros"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

# This is a workspace member - configuration inherited from root 